plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
//    id 'com.vanniktech.maven.publish.gradle.plugin'
    id "com.vanniktech.maven.publish" version "0.28.0"
    id 'signing'
    id 'kotlin-kapt'
//    id 'com.github.dcendents.android-maven'
}

android {
    namespace 'com.github.legend295.fingerprintscanner'
    compileSdk 34

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    /* android.buildFeatures.dataBinding = true
     android.buildFeatures.viewBinding = true*/
    buildFeatures {
        dataBinding = true
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.legend295'
                artifactId = 'FingerprintScannerSDK'
                version = '1.0.4'
            }
        }
    }
}


//test
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'])
    implementation files('libs/nb_android.jar')
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'com.google.code.gson:gson:2.10'
    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:32.8.1"))

    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-firestore'
//    implementation 'com.github.dcendents:android-maven-gradle-plugin:2.1'
//    implementation 'org.sonatype.central:central-publishing-maven-plugin:0.4.0'
//    implementation 'com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin:0.28.0'
}
/*task generateRepo(type:Zip){
    def publishTask = tasks.named('publishReleasePublicationToMyrepoRepository')
    from publishTask.map { it.getRepository().getUrl() }
    into 'mylibrary'
    archiveFileName.set('mylibrary.zip')
}*/
/*tasks.register('generateRepo', Zip) {
    def publishTask = tasks.named('publishReleasePublicationToMyrepoRepository')
    from publishTask.map { it.getRepository().getUrl() }
    into 'mylibrary'
    archiveFileName.set('mylibrary.zip')
}*/

//apply from: '../publish-package.gradle'